/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelRelojFecha.java
 *
 * Created on 05-may-2010, 20:22:03
 */

package Vista.InterfazMetre;

import utilidades.*;
import java.util.Calendar;
import javax.swing.JLabel;

/**
 *
 * @author redder
 */
public class PanelRelojFecha2 extends javax.swing.JPanel {

    Actualizador actualizador;
    /** Creates new form PanelRelojFecha */
    public PanelRelojFecha2() {
        initComponents();
        this.actualizador = new Actualizador(tHora, tFecha);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pCentro = new javax.swing.JPanel();
        tHora = new javax.swing.JLabel();
        pSur = new javax.swing.JPanel();
        tFecha = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(150, 172, 229), new java.awt.Color(150, 172, 229), new java.awt.Color(150, 172, 229), new java.awt.Color(150, 172, 229)));
        setForeground(new java.awt.Color(150, 172, 229));
        setMaximumSize(new java.awt.Dimension(200, 80));
        setMinimumSize(new java.awt.Dimension(200, 80));
        setPreferredSize(new java.awt.Dimension(200, 80));
        setLayout(new java.awt.BorderLayout());

        pCentro.setOpaque(false);
        pCentro.setLayout(new java.awt.BorderLayout());

        tHora.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        tHora.setForeground(new java.awt.Color(80, 98, 143));
        tHora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tHora.setText("16:32");
        tHora.setMaximumSize(new java.awt.Dimension(150, 60));
        pCentro.add(tHora, java.awt.BorderLayout.CENTER);

        add(pCentro, java.awt.BorderLayout.CENTER);

        pSur.setOpaque(false);
        pSur.setLayout(new java.awt.BorderLayout());

        tFecha.setFont(new java.awt.Font("Arial", 1, 12));
        tFecha.setForeground(new java.awt.Color(80, 98, 143));
        tFecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tFecha.setText("Martes 14, Agosto 2010");
        pSur.add(tFecha, java.awt.BorderLayout.CENTER);

        add(pSur, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pCentro;
    private javax.swing.JPanel pSur;
    private javax.swing.JLabel tFecha;
    private javax.swing.JLabel tHora;
    // End of variables declaration//GEN-END:variables

    class Actualizador implements Runnable{

        Thread t;
        boolean end;
        JLabel hora, fecha;
        Calendar calendario;

        Actualizador(JLabel hora, JLabel fecha){
            end = false;
            this.hora = hora;
            this.fecha = fecha;
            t = new Thread(this, "Hebra Actualizadora");
            t.start();
        }

        public void run() {
            while(!end){
                try {
                    calendario = Calendar.getInstance();
                    hora.setText(calendario.get(Calendar.HOUR_OF_DAY)+":"+
                            calendario.get(Calendar.MINUTE));
                    fecha.setText(this.getDiaSemana(calendario.get(Calendar.DAY_OF_WEEK))+" "+
                            calendario.get(Calendar.DAY_OF_MONTH)+", "+
                            this.getMes(calendario.get(Calendar.MONTH))+" "+
                            calendario.get(Calendar.YEAR));
                    Thread.sleep(10000);
                    //synchronized(this){
                    //    wait();
                    //}
                } catch (InterruptedException ex) {
                    end = true;
                }
            }
        }

        private String getDiaSemana(int dia){
            switch(dia){
                case Calendar.MONDAY:
                    return "Lunes";
                case Calendar.TUESDAY:
                    return "Martes";
                case Calendar.WEDNESDAY:
                    return "Miercoles";
                case Calendar.THURSDAY:
                    return "Jueves";
                case Calendar.FRIDAY:
                    return "Viernes";
                case Calendar.SATURDAY:
                    return "Sabado";
                default:
                    return "Domingo";
            }
        }

        private String getMes(int mes){
            switch(mes){
                case Calendar.JANUARY:
                    return "Enero";
                case Calendar.FEBRUARY:
                    return "Febrero";
                case Calendar.MARCH:
                    return "Marzo";
                case Calendar.APRIL:
                    return "Abril";
                case Calendar.MAY:
                    return "Mayo";
                case Calendar.JUNE:
                    return "Junio";
                case Calendar.JULY:
                    return "Julio";
                case Calendar.AUGUST:
                    return "Agosto";
                case Calendar.SEPTEMBER:
                    return "Septiembre";
                case Calendar.OCTOBER:
                    return "Octubre";
                case Calendar.NOVEMBER:
                    return "Nombiembre";
                default:
                    return "Diciembre";
            }
        }

    }
}
