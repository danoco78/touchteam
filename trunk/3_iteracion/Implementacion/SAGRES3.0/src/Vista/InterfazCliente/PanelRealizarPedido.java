/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelRealizarPedido.java
 *
 * Created on 10-may-2010, 20:12:12
 */

package Vista.InterfazCliente;

import GestionCarta.Elemento;
import GestionPedidos.ElementoPedido;
import java.util.ArrayList;
import java.util.Iterator;
import utilidades.Pair;

/**
 *
 * @author Carlos, Modificado por Sergio
 */
public class PanelRealizarPedido extends javax.swing.JPanel {

    PanelGeneralCliente panelGeneralCliente;
    ArrayList<Pair<Elemento,String> > listaElementosComentarios;
    private int codPedidoActivo;

    /** Creates new form PanelRealizarPedido */
    public PanelRealizarPedido(PanelGeneralCliente panelGeneralCliente) {
        initComponents();
        this.panelGeneralCliente=panelGeneralCliente;
        this.listaElementosComentarios = new ArrayList();
        this.codPedidoActivo=-1;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelElementosPedido = new javax.swing.JPanel();
        BotonVerFactura = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout(0, 10));

        PanelElementosPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(150, 172, 229), 3));
        PanelElementosPedido.setLayout(new java.awt.GridLayout(10, 0, 0, 3));
        add(PanelElementosPedido, java.awt.BorderLayout.CENTER);

        BotonVerFactura.setFont(new java.awt.Font("Arial", 1, 16));
        BotonVerFactura.setForeground(new java.awt.Color(80, 98, 143));
        BotonVerFactura.setText("Realizar Pedido");
        BotonVerFactura.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(150, 172, 229), 1, true));
        BotonVerFactura.setPreferredSize(new java.awt.Dimension(89, 50));
        BotonVerFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                realizarPedido(evt);
            }
        });
        add(BotonVerFactura, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void realizarPedido(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_realizarPedido
        this.panelGeneralCliente.realizarPedido();
    }//GEN-LAST:event_realizarPedido


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonVerFactura;
    public javax.swing.JPanel PanelElementosPedido;
    // End of variables declaration//GEN-END:variables

    public void anadirElementoPedido(Elemento elemento, String comentario) {
        ElementoPedido elementoPedido = new ElementoPedido(elemento.getCodigoElemento(), 0, comentario);
        PanelElementosPedido.add(new PanelElementoPedido(elementoPedido, elemento,this));
        listaElementosComentarios.add(new Pair(elemento, comentario));
    }

    @SuppressWarnings("element-type-mismatch")
    public void quitarElemento(PanelElementoPedido panelElementoPedido) {
        this.PanelElementosPedido.remove(panelElementoPedido);

        Iterator it = this.listaElementosComentarios.iterator();
        boolean borrado=false;
        while(it.hasNext() && !borrado){
            Elemento elemento = (Elemento) ((Pair<Elemento, String>) it.next()).getFirst();
            if(elemento.equals(panelElementoPedido.elemento)){
                it.remove();
                borrado=true;
            }
        }

        if(this.vacio()){
            this.panelGeneralCliente.pedidoRealizado=true;
            if(this.codPedidoActivo!=-1){
                this.panelGeneralCliente.eliminarPedido(codPedidoActivo);
            }else{
                this.panelGeneralCliente.cambiarPanelEste();
            }
        }
        this.repaint();
        this.revalidate();
    }

    public int getNumElementos() {
        return this.PanelElementosPedido.getComponentCount();
    }

    public ArrayList<Pair<Elemento,String> > getElementosComentarios() {
        return this.listaElementosComentarios;
    }

    public void limpiar() {
        this.listaElementosComentarios=new ArrayList();
        this.PanelElementosPedido.removeAll();
    }

    public int getCodPedidoActivo() {
        return this.codPedidoActivo;
    }

    public void setPedidoActivo(int codPedido) {
        this.codPedidoActivo=codPedido;
    }

    public boolean vacio(){
        return this.listaElementosComentarios.isEmpty();
    }

}
